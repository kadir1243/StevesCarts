plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
		content {
			includeGroup "io.github.cottonmc"
		}
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
		content {
			includeGroup "alexiil.mc.lib"
		}
	}
	maven {
		name "REI"
		url "https://maven.shedaniel.me/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "RebornCore:RebornCore-1.19:${project.reborncore_version}"
	modImplementation "TechReborn:TechReborn-1.19:${project.reborncore_version}"
	modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}")
	modImplementation include("alexiil.mc.lib:libblockattributes-core:${project.lba_version}")
	modImplementation include("alexiil.mc.lib:libblockattributes-fluids:${project.lba_version}")
}

sourceSets {
	main {
		resources {
			srcDirs += ["src/main/generated"]
		}
	}
}

loom {
	runs {
		datagenClient {
			client()
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			ideConfigGenerated = true
			runDir "build/datagen"
			source sourceSets.main
		}
	}

	accessWidenerPath = file("src/main/resources/stevescarts.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
